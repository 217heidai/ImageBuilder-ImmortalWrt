# This is a basic workflow to help you get started with Actions

name: ImageBuilder ImmortalWrt 23.05.x

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release: 
        description: 将编译出的镜像上传到 Release
        required: false
        default: 'true'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOWNLOAD_BASE: https://downloads.immortalwrt.org
  VENDOR: immortalwrt
  VERSION: 23.05.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ImageBuilder_ImmortalWrt:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Initialization Environment
        run: |
          sudo apt -qq update
          sudo apt -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip qemu-utils mkisofs python3-distutils
          sudo timedatectl set-timezone "Asia/Shanghai"
          echo "DATE=$(TZ=UTC-8 date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(TZ=UTC-8 date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          path: origin

      - name: Download Image Builder
        run: |
          wget $DOWNLOAD_BASE/releases/$VERSION/targets/x86/64/$VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          tar -xvf $VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          rm -rf $VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          cp -r $GITHUB_WORKSPACE/origin/* $GITHUB_WORKSPACE/$VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64/
      
      - name: Run Patch and DIY Scripts
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64
        run: |
          bash scripts/builder-patch-23.05.x.sh

      - name: Generate Firmware
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64
        run: |
          bash build-23.05.x.sh

      - name: Upload Firmware to Release
        if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ env.GITHUB_TOKEN }}
          file_glob: true
          file: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64/bin/targets/x86/64/*
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: ${{ env.VENDOR }}-${{ env.VERSION }}-x86_64-${{ env.DATETIME }}
          overwrite: true
          
      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 1
